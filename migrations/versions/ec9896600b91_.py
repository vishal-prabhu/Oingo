"""empty message

Revision ID: ec9896600b91
Revises: cc34f6c0e804
Create Date: 2018-12-12 17:43:15.369729

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ec9896600b91'
down_revision = 'cc34f6c0e804'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('recurrence_pattern',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recurrence_type', sa.String(length=10), nullable=True),
    sa.Column('start_time', sa.Time(), nullable=True),
    sa.Column('end_time', sa.Time(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('separation_count', sa.SmallInteger(), nullable=True),
    sa.Column('day_of_week', sa.SmallInteger(), nullable=True),
    sa.Column('week_of_month', sa.SmallInteger(), nullable=True),
    sa.Column('day_of_month', sa.SmallInteger(), nullable=True),
    sa.Column('month_of_year', sa.SmallInteger(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('region',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('radius', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tag',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=25), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('filter',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['status_id'], ['status_types.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_location_tracking',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'timestamp')
    )
    op.create_table('user_filter_location',
    sa.Column('filter_id', sa.Integer(), nullable=True),
    sa.Column('region_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['filter_id'], ['filter.id'], ),
    sa.ForeignKeyConstraint(['region_id'], ['region.id'], )
    )
    op.create_table('user_filter_tags',
    sa.Column('filter_id', sa.Integer(), nullable=True),
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['filter_id'], ['filter.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], )
    )
    op.create_table('user_filter_time',
    sa.Column('filter_id', sa.Integer(), nullable=True),
    sa.Column('recurrence_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['filter_id'], ['filter.id'], ),
    sa.ForeignKeyConstraint(['recurrence_id'], ['recurrence_pattern.id'], )
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_filter_time')
    op.drop_table('user_filter_tags')
    op.drop_table('user_filter_location')
    op.drop_table('user_location_tracking')
    op.drop_table('filter')
    op.drop_table('tag')
    op.drop_table('region')
    op.drop_table('recurrence_pattern')
    # ### end Alembic commands ###
